name: Build-locally

on:
  push:
    branches:
      - add_github-actions
      - master
  pull_request:
    branches:
      - master

env:
  APP_SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://inspirehep:inspirehep@localhost:5432/inspirehep
  APP_CELERY_BROKER_URL: pyamqp://guest:guest@localhost:5672//
  APP_CELERY_RESULT_BACKEND: redis://localhost:6379/1
  APP_CACHE_REDIS_URL: redis://localhost:6379/0
  APP_ACCOUNTS_SESSION_REDIS_URL: redis://localhost:6379/2
  APP_SEARCH_ELASTIC_HOSTS: localhost
  LD_LIBRARY_PATH: /usr/local/lib/python2.7/dist-packages/pyxrootd/lib

jobs:
  Build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version:
          - 2.7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v4
        with:
            poetry-version: 1.0.0
      - name: Cache Python
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-{{ hashFiles('poetry.lock') }}
#      - name: Cache poetry env
#        uses: actions/cache@v2.1.3
#        id: cache
#        with:
#          path: ~/.cache/pypoetry/virtualenvs
#          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ github.sha }}
      - name: Install additional apps
        #if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes tree imagemagick transfig build-essential python-dev python-pip pkg-config git cmake openssl libssl-dev uuid uuid-dev xmlstarlet zlib1g zlib1g-dev
          pip install --upgrade pip setuptools wheel
          pip install xrootd==4.12.6
#      - name: Install requirements
#        run: poetry install -n -E all -E xrootd
      - name: Install requirements from poetry generated requirements.txt
        #if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry export --without-hashes -E all -E xrootd -f requirements.txt > requirements.poetry.txt
          pip install --ignore-installed --src ${{ env.pythonLocation }}/lib/python2.7/site-packages/ --requirement requirements.poetry.txt
          pip install -e .
      - name: display packages and libraries
        run: |
          pip freeze
          echo $LD_LIBRARY_PATH
          tree -d -L 4 ${{ env.pythonLocation }}


  Workflows:
    runs-on: ubuntu-18.04
    needs: Build
    strategy:
      matrix:
        python-version:
          - 2.7
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: inspirehep
          POSTGRES_PASSWORD: inspirehep
          POSTGRES_DB: inspirehep
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
      elasticsearch:
        image: inspirehep/elasticsearch:7.1.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200
    steps:
      - name: Install additional apps
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes tree imagemagick transfig xmlstarlet zlib1g
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-{{ hashFiles('poetry.lock') }}
      - name: List python env folder
        run:  tree -d -L 4 ${{ env.pythonLocation }}
      - name: Fix ImageMagic policy for PDF
        run: sudo xmlstarlet ed -L -u "/policymap/policy[@domain='coder']/@rights" -v 'read|write' /etc/ImageMagick-6/policy.xml
      - name: Run tests
        run: py.test tests/integration/workflows
  Integration:
    runs-on: ubuntu-18.04
    needs: Build
    strategy:
      matrix:
        python-version:
          - 2.7
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: inspirehep
          POSTGRES_PASSWORD: inspirehep
          POSTGRES_DB: inspirehep
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
      elasticsearch:
        image: inspirehep/elasticsearch:7.1.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200
    steps:
      - name: Install additional apps
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes imagemagick transfig xmlstarlet zlib1g
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-{{ hashFiles('poetry.lock') }}

      - name: Fix ImageMagic policy for PDF
        run: sudo xmlstarlet ed -L -u "/policymap/policy[@domain='coder']/@rights" -v 'read|write' /etc/ImageMagick-6/policy.xml
      - name: Run tests
        run: py.test tests/integration --ignore tests/integration/workflows

  Integration-async:
    runs-on: ubuntu-18.04
    needs: Build
    strategy:
      matrix:
        python-version:
          - 2.7
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: inspirehep
          POSTGRES_PASSWORD: inspirehep
          POSTGRES_DB: inspirehep
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
      elasticsearch:
        image: inspirehep/elasticsearch:7.1.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200
    steps:
      - name: Install additional apps
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes imagemagick transfig xmlstarlet zlib1g
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-{{ hashFiles('poetry.lock') }}

      - name: Fix ImageMagic policy for PDF
        run: sudo xmlstarlet ed -L -u "/policymap/policy[@domain='coder']/@rights" -v 'read|write' /etc/ImageMagick-6/policy.xml
      - name: Run tests
        run: py.test tests/integration_async
  Unit:
    runs-on: ubuntu-18.04
    needs: Build
    strategy:
      matrix:
        python-version:
          - 2.7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-{{ hashFiles('poetry.lock') }}
#      - name: Fix ImageMagic policy for PDF
#        run: sudo xmlstarlet ed -L -u "/policymap/policy[@pattern='PDF'][@domain='coder']/@rights" -v 'read|write' /etc/ImageMagick-6/policy.xml
      - name: Run tests
        run: py.test tests/unit


