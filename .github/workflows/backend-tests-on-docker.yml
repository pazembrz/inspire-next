name: Build on docker

on:
  push:
    branches:
      - add_github-actions
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

#env:
#  APP_SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://inspirehep:inspirehep@test-database:5432/inspirehep
#  APP_CELERY_BROKER_URL: pyamqp://guest:guest@test-rabbitmq:5672//
#  APP_CELERY_RESULT_BACKEND: redis://test-redis:6379/1
#  APP_CACHE_REDIS_URL: redis://test-redis:6379/0
#  APP_ACCOUNTS_SESSION_REDIS_URL: redis://test-redis:6379/2
#  APP_SEARCH_ELASTIC_HOSTS: test-indexer

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
#      - name: Cache images
#        id: cache
#        uses: satackey/action-docker-layer-caching@v0.0.11
#        continue-on-error: true
#        with:
#          key: docker-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock') }}
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          compose_file: docker-compose.test.yml
          build_extra_args: "--compress=true"
#      - name: Build images
#        run: docker-compose -f services.yml build --force-rm base

  Workflows:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
#      - name: Cache images
#        uses: satackey/action-docker-layer-caching@v0.0.11
#        with:
#          key: docker-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock') }}
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          compose_file: docker-compose.test.yml
          build_extra_args: "--compress=true"
      - name: Prepare docker
        run: |
          docker-compose -f docker-compose.test.yml pull --parallel test-database test-indexer test-rabbitmq test-redis
          docker-compose -f docker-compose.test.yml build --parallel workflows test-web
          docker-compose -f docker-compose.test.yml up -d test-database test-indexer test-rabbitmq test-redis test-web
          sh docker/wait-for-services.sh
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm workflows

  Integration:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache images
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile', 'poetry.lock') }}
      - name: Prepare docker
        run: |
          docker-compose -f docker-compose.test.yml pull --parallel test-database test-indexer test-redis
          docker-compose -f docker-compose.test.yml up -d test-database test-indexer test-redis
          sh docker/wait-for-services.sh
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm integration

  Integration-async:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache images
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile', 'poetry.lock') }}
      - name: Prepare docker
        run: |
          docker-compose -f docker-compose.test.yml pull --parallel test-database test-indexer test-redis test-rabbitmq
          docker-compose -f docker-compose.test.yml up -d test-database test-indexer test-redis test-rabbitmq
          sh docker/wait-for-services.sh
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm integration_async

  Unit:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache images
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile', 'poetry.lock') }}
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm unit

  Release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [Unit, Integration-async, Integration, Workflows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache images
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile', 'poetry.lock') }}
      - name: deploy docker images
        run: sh deploy-docker--image.sh

