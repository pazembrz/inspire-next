name: Build on docker

on:
  push:
    branches:
      - add_github-actions
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master


jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache docker image
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: /tmp/docker-images
#          key: docker-images-cache-${{ github.sha }}
          key: docker-images-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock', 'setup.py', 'setup.cfg') }}

      - name: Build images
        if: steps.cache.outputs.cache-hit != 'true'
        run: docker-compose -f services.yml build --compress --force-rm base
      - name: Save image
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /tmp/docker-images
          docker save inspire-build/inspire-next-base -o /tmp/docker-images/base.tar


  Workflows:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache docker image
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: /tmp/docker-images
#          key: docker-images-cache-${{ github.sha }}
          key: docker-images-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock', 'setup.py', 'setup.cfg') }}      - name: Prepare docker
        run: |
          docker load -i /tmp/docker-images/base.tar
          docker-compose -f docker-compose.test.yml pull --parallel test-database test-indexer test-rabbitmq test-redis
          docker-compose -f docker-compose.test.yml build --parallel workflows test-web
          docker-compose -f docker-compose.test.yml up -d test-database test-indexer test-rabbitmq test-redis test-web
          sh docker/wait-for-services.sh
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm workflows

  Integration:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache docker image
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: /tmp/docker-images
#          key: docker-images-cache-${{ github.sha }}
          key: docker-images-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock', 'setup.py', 'setup.cfg') }}
      - name: Prepare docker
        run: |
          docker load -i /tmp/docker-images/base.tar
          docker-compose -f docker-compose.test.yml pull --parallel test-database test-indexer test-redis
          docker-compose -f docker-compose.test.yml up -d test-database test-indexer test-redis
          sh docker/wait-for-services.sh
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm integration

  Integration-async:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache docker image
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: /tmp/docker-images
#          key: docker-images-cache-${{ github.sha }}
          key: docker-images-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock', 'setup.py', 'setup.cfg') }}
      - name: Prepare docker
        run: |
          docker load -i /tmp/docker-images/base.tar
          docker-compose -f docker-compose.test.yml pull --parallel test-database test-indexer test-redis test-rabbitmq
          docker-compose -f docker-compose.test.yml up -d test-database test-indexer test-redis test-rabbitmq
          sh docker/wait-for-services.sh
      - name: Run tests
        run: docker-compose -f docker-compose.test.yml run --rm integration_async

  Unit:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache docker image
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: /tmp/docker-images
#          key: docker-images-cache-${{ github.sha }}
          key: docker-images-cache-${{ hashFiles('services.yml', 'docker-compose.test.yml', 'Dockerfile.dev', 'poetry.lock', 'setup.py', 'setup.cfg') }}
      - name: Run tests
        run: |
          docker load -i /tmp/docker-images/base.tar
          docker-compose -f docker-compose.test.yml run --rm unit

  Release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [Unit, Integration-async, Integration, Workflows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: deploy docker images
        run: sh deploy-docker--image.sh
